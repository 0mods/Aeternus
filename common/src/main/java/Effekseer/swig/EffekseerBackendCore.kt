/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package Effekseer.swig

open class EffekseerBackendCore protected constructor(
    @field:Transient private var swigCPtr: Long,
    @field:Transient protected var swigCMemOwn: Boolean
) {
    protected fun finalize() {
        delete()
    }

    @Synchronized
    fun delete() {
        if (swigCPtr != 0L) {
            if (swigCMemOwn) {
                swigCMemOwn = false
                EffekseerCoreJNI.delete_EffekseerBackendCore(swigCPtr)
            }
            swigCPtr = 0
        }
    }

    constructor() : this(EffekseerCoreJNI.new_EffekseerBackendCore(), true)

    companion object {
        @JvmStatic
        protected fun getCPtr(obj: EffekseerBackendCore?): Long {
            return if ((obj == null)) 0 else obj.swigCPtr
        }

        @JvmStatic
        protected fun swigRelease(obj: EffekseerBackendCore?): Long {
            var ptr: Long = 0
            if (obj != null) {
                if (!obj.swigCMemOwn) throw RuntimeException("Cannot release ownership as memory is not owned")
                ptr = obj.swigCPtr
                obj.swigCMemOwn = false
                obj.delete()
            }
            return ptr
        }

        @JvmStatic
        fun GetDevice(): EffekseerCoreDeviceType {
            return EffekseerCoreDeviceType.swigToEnum(EffekseerCoreJNI.EffekseerBackendCore_GetDevice())
        }

        @JvmStatic
        fun InitializeWithOpenGL(): Boolean {
            return EffekseerCoreJNI.EffekseerBackendCore_InitializeWithOpenGL()
        }

        @JvmStatic
        fun Terminate() {
            EffekseerCoreJNI.EffekseerBackendCore_Terminate()
        }
    }
}
